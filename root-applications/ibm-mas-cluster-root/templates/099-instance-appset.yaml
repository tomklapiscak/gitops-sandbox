
---
# IBM Maximo Application Suite Instance Application Set
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: mascore2816.instance-appset.{{ .Values.cluster.id }}
  namespace: {{ .Values.argo.namespace }}
  labels:
    environment: '{{ .Values.account.id }}'
    region: '{{ .Values.region.id }}'
    cluster: '{{ .Values.cluster.id }}'
  annotations:
    argocd.argoproj.io/sync-wave: "099"
spec:
  goTemplate: true
  generators:
    - merge:
        mergeKeys:
          # Would love to use ".path.path" here to merge the configs together
          # but this is not possible currently with goTemplate: true - see https://github.com/argoproj/argo-cd/issues/12836
          # (and we really want goTemplate: true so we can dump the entire config file into HELM_VALUES using toPrettyJson)
          # instead, we are forced to explicitly provide a merge key in all of our config files to make them line up
          - 'merge-key'
        generators:
          # This is the "base" generator, it *must* be first in the list
          - git:
              repoURL: "{{ .Values.generator.repo_url }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.cluster.id }}/*/ibm-mas-instance-base.yaml"
          - git:
              repoURL: "{{ .Values.generator.repo_url }}"
              revision: "{{ .Values.generator.revision }}"
              files:
              - path: "{{ .Values.account.id }}/{{ .Values.cluster.id }}/*/instance-dummy.yaml"
  template:
    metadata:
      name: "instance.{{ .Values.cluster.id }}.{{ `{{.instance.id}}` }}"
      labels:
        environment: '{{ .Values.account.id }}'
        region: '{{ .Values.region.id }}'
        cluster: '{{ .Values.cluster.id }}'
        instance: '{{ `{{.instance.id}}` }}'
{{- if .Values.custom_labels }}
{{ .Values.custom_labels | toYaml | indent 8 }}
{{- end }}
      annotations:
        healthCheckTimeout: "1800"
        argocd.argoproj.io/sync-wave: "099"
        {{- if and .Values.notifications .Values.notifications.slack_channel_id }}
        notifications.argoproj.io/subscribe.on-sync-failed.workspace1: {{ .Values.notifications.slack_channel_id }}
        notifications.argoproj.io/subscribe.on-sync-succeeded.workspace1: {{ .Values.notifications.slack_channel_id }}
        {{- end }}
    spec:
      project: "{{ .Values.argo.projects.rootapps }}"
      source:
          repoURL: "{{ .Values.source.repo_url }}"
          targetRevision: "{{ .Values.source.revision }}"
          path: root-applications/ibm-mas-instance-root
          helm:
            releaseName: instanceappset
            values: "{{ `{{ toYaml . }}` }}"
            parameters:
              - name: "generator.repo_url"
                value: "{{ .Values.generator.repo_url }}"
              - name: "generator.revision"
                value: "{{ .Values.generator.revision }}"
              - name: "source.revision"
                value: "{{ .Values.source.revision }}"
              - name: "source.repo_url"
                value: "{{ .Values.source.repo_url }}"
              - name: argo.namespace
                value: "{{ .Values.argo.namespace }}"
                {{- if and .Values.notifications .Values.notifications.slack_channel_id }}
              - name: "notifications.slack_channel_id"
                value: "{{ .Values.notifications.slack_channel_id }}"
                {{- end }}
              - name: argo.projects.rootapps
                value: "{{ .Values.argo.projects.rootapps }}"
              - name: argo.projects.apps
                value: "{{ .Values.argo.projects.apps }}"
              - name: avp.name
                value: "{{ .Values.avp.name }}"
              - name: avp.secret
                value: "{{ .Values.avp.secret }}"
              - name: avp.values_varname
                value: "{{ .Values.avp.values_varname }}"

              - name: prune
                value: {{ .Values.prune }}
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: {{ .Values.argo.namespace }}
      syncPolicy:
        automated:
          prune: {{ .Values.prune }}
          selfHeal: true
        syncOptions:
          - CreateNamespace=false
          - RespectIgnoreDifferences=true
      ignoreDifferences:
        - group: '*'
          kind: ServiceAccount
          jsonPointers:
            - /imagePullSecrets
        - group: 'marketplace.redhat.com/v1alpha1'
          kind: MarketplaceConfig
          jsonPointers:
            - /spec
