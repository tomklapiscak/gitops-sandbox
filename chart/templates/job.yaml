{{- /*
Use the build/bin/set-cli-image.sh script to update this value across all charts.
*/}}
{{- $_cli_image_tag := "13.2.0" }}

{{- /*
Meaningful prefix for the job resource name. Must be under 52 chars in length to leave room for the 11 char $_job_hash
*/}}
{{- $_job_name_prefix := "postsync-rhcm-update-sm-job" }}

{{- /*
A dict of values that influence the behaviour of the job in some way.
Any changes to values in this dict will trigger a rerun of the job.
Since jobs must be idemopotent, it's generally safe to pass in values here that are not
strictly necessary (i.e. including some values that don't actually influence job behaviour).
We may want to refine this further though for jobs that can take a long time to complete.
*/}}
{{- $_job_config_values := omit .Values "junitreporter" }}

{{- /*
Increment this value whenever you make a change to an immutable field of the Job resource.
E.g. passing in a new environment variable.
*/}}
{{- $_job_version := "v5" }}

{{- /*
10 char hash appended to the job name taking into account $_job_config_values, $_job_version and $_cli_image_tag
This is to ensure ArgoCD will create a new job resource intead of attempting (and failing) to update an
immutable field of any existing Job resource.
*/}}
{{- $_job_hash := print ($_job_config_values | toYaml) $_cli_image_tag $_job_version | adler32sum }}

{{- $_job_name := join "-" (list $_job_name_prefix $_job_hash )}}



---

kind: Job
apiVersion: batch/v1
metadata:
  name: {{ $_job_name }}
spec:
  template:
    metadata:)
      labels:
        app: "joblabel"
    spec:
      serviceAccountName: "default"
      restartPolicy: Never
      containers:
        - name: run
          image: "quay.io/ibmmas/cli:{{ $_cli_image_tag }}"
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          env: []
          command:
            - /bin/sh
            - -c
            - while true; do echo "sleep"; sleep 100; done
